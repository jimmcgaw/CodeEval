#!/usr/bin/python

import sys
import re

# check that a filename argument was provided, otherwise
if len(sys.argv) < 2:
  raise Exception("Filename must be first argument provided")

filename = sys.argv[1]
lines = []

# open file in read mode, assuming file  is in same directory as script
try:
  file = open(filename, 'r')

  # read Fibbonacci indexes from file into list
  lines = file.readlines()
  file.close()
except IOError:
  print "File '%s' was not found in current directory" % filename

lines = [line.replace('\n', '') for line in lines]

try:
  lines.remove("")
except:
  pass

import collections

for line in lines:
    parts = line.split(';')
    scrambled = parts[0].split(' ')
    positions = [int(n) for n in parts[1].split(' ')]
    if len(scrambled) not in positions:
        # missing index is last one
        positions.append(len(scrambled))
    else:
        sorted_positions = sorted(positions)
        missing_position = sum(range(sorted_positions[0], sorted_positions[-1]+1)) - sum(positions)
        positions.append(missing_position)


    word_positions = sorted(zip(scrambled, positions), key=lambda wp: wp[1])

    sentence = [wp[0] for wp in word_positions]

    print ' '.join(sentence)
